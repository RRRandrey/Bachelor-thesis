{"cells":[{"cell_type":"markdown","source":["1. **Парсинг данных об административных центрах и их координатах**"],"metadata":{"id":"K_kotjwLieB1"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"it0raMRZDlb3"},"outputs":[],"source":["# Подключение библиотек\n","import pandas as pd                             # работа с датафреймами\n","import numpy as np                              # работа с массивами\n","import requests as rq                           # подключения к серверам\n","import re                                       # регулярные выражения\n","\n","from bs4 import BeautifulSoup                   # работа с html\n","from math import asin, sqrt, sin, cos           # расчёты в формуле расстояний\n","from sklearn.preprocessing import normalize     # нормализация элементов матрицы по строкам"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ngwpsjsxGCgH"},"outputs":[],"source":["# Ссылки на сайты\n","url1 = 'https://time-in.ru/coordinates/russia?ysclid=ls092pt3x2449892952'\n","url2 = 'https://wiki.openstreetmap.org/wiki/RU:Россия/Субъекты_РФ'"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1889,"status":"ok","timestamp":1710504796134,"user":{"displayName":"Андрей Раецкий","userId":"17087416497130291838"},"user_tz":-180},"id":"eygbZN7zD6aa","outputId":"b4c4bd6f-b017-4c9a-ebaa-c47db6655cf2"},"outputs":[{"output_type":"stream","name":"stdout","text":["<Response [200]>\n","<Response [200]>\n"]}],"source":["# Запросы\n","response1 = rq.get(url1)\n","response2 = rq.get(url2)\n","\n","print(response1)\n","print(response2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7S-Zq6qdGk6A"},"outputs":[],"source":["# Преобразование запросов в текст html\n","soup1 = BeautifulSoup(response1.text, 'html.parser')\n","soup2 = BeautifulSoup(response2.text, 'html.parser')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v5RarxU1G1L2"},"outputs":[],"source":["# Список всех российских городов\n","cities = []\n","\n","for tag in soup1.find_all('a', {'class':'coordinates-items-left'}):\n","  cities.append(tag.text)"]},{"cell_type":"code","source":["# Координаты российских городов\n","coordinates = []\n","\n","for tag in soup1.find_all('div'):\n","  coordinates.append(tag.text)\n","coordinates = coordinates[coordinates.index('55.75, 37.62'):coordinates.index('55.07, 32.7') + 1]"],"metadata":{"id":"9gIP038HBQM8"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uZiCtJZ8L916"},"outputs":[],"source":["# Необработанный список регионов и их административных центров российских регионов\n","capitals = []\n","\n","for tag in soup2.find_all('a'):\n","  capitals.append(tag.text)\n","capitals = capitals[capitals.index('Республика Адыгея'):]\n","capitals = capitals[: capitals.index('Салехард') + 1]"]},{"cell_type":"code","source":["# Обработанный список российских регионов и их административных центров\n","for i in capitals:\n","  if i == '' or i == 'форум' or i == 'Автономная область' or i == 'Автономные округа' :\n","    capitals.remove(i)\n","\n","r = re.compile('[^0-9]+')\n","capitals = list(filter(r.match, capitals))"],"metadata":{"id":"Hpq11BsKFfZd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Разделение списка на регионы и их административные центры\n","Region = []\n","Capitals = []\n","\n","for i in range(0, len(capitals)):\n","  if i == 0 or i % 2 == 0:\n","    Region.append(capitals[i])\n","  else:\n","    Capitals.append(capitals[i])"],"metadata":{"id":"Sy3aWjgOFIAH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["2. **Создание датафреймов с данными**"],"metadata":{"id":"eY4Y987giuWS"}},{"cell_type":"code","source":["# Датафреймы\n","Regions_cities = pd.DataFrame({'Region' : Region, 'City' : Capitals})\n","Cities_coordinates = pd.DataFrame({'City' : cities, 'Coordinates' : coordinates})"],"metadata":{"id":"r3A4oXYaHPzX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Объединение датафреймов и преобразование столбца с координатами\n","data = pd.merge(Regions_cities, Cities_coordinates, how = 'left', on = 'City')\n","\n","data[['Latitude', 'Longitude']] = data.Coordinates.str.split(',', expand = True)\n","data = data.drop('Coordinates', axis = 1)"],"metadata":{"id":"zt_cgrHIH0xJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Замена на то, как в Росстате\n","data['Region'] = data['Region'].replace(['Москва', 'Санкт-Петербург', 'Республика Тыва (Тува)', 'Чувашская Республика — Чувашия', 'Республика Северная Осетия — Алания', 'Республика Татарстан (Татарстан)'], ['г. Москва', 'г. Санкт-Петербург', 'Республика Тыва', 'Чувашская Республика', 'Республика Северная Осетия – Алания', 'Республика Татарстан'])"],"metadata":{"id":"s6TPfCGRRmUz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Массив данных с правильным порядком\n","total_df = pd.read_excel('/content/total_df.xlsx')\n","total_df = total_df.drop_duplicates(subset=[\"Region\"])\n","total_df = total_df.drop(['Year', 'GRP', 'R&D', 'Capital', 'Labor', 'HumCap', 'FDI', 'Export', 'Import'], axis = 1)"],"metadata":{"id":"R_NA-jOvM6Jq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3. **Сделать регионы в том же порядке, что и в данных**"],"metadata":{"id":"2MckwjGjPaOO"}},{"cell_type":"code","source":["# Координаты регионов в правильном порядке\n","data_with_coordinates = pd.merge(total_df, data, how = 'left', on = 'Region')\n","data_with_coordinates['Latitude'] = data_with_coordinates['Latitude'].astype('float64')\n","data_with_coordinates['Longitude'] = data_with_coordinates['Longitude'].astype('float64')\n","data_with_coordinates"],"metadata":{"id":"RkQY8odlOaem","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1710504852433,"user_tz":-180,"elapsed":561,"user":{"displayName":"Андрей Раецкий","userId":"17087416497130291838"}},"outputId":"76d1cc2b-14fc-45f0-9d8c-deb260e9632c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Region            City  Latitude  Longitude\n","0   Белгородская область        Белгород     50.61      36.58\n","1       Брянская область          Брянск     53.25      34.37\n","2   Владимирская область        Владимир     56.14      40.40\n","3    Воронежская область         Воронеж     51.67      39.18\n","4     Ивановская область         Иваново     57.00      40.97\n","..                   ...             ...       ...        ...\n","71       Приморский край     Владивосток     43.11     131.87\n","72      Хабаровский край       Хабаровск     48.48     135.08\n","73      Амурская область    Благовещенск     50.28     127.54\n","74   Магаданская область         Магадан     59.56     150.80\n","75   Сахалинская область  Южно-Сахалинск     46.95     142.74\n","\n","[76 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-942a9d56-d092-4fd9-bafa-c1028c8716e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Region</th>\n","      <th>City</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Белгородская область</td>\n","      <td>Белгород</td>\n","      <td>50.61</td>\n","      <td>36.58</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Брянская область</td>\n","      <td>Брянск</td>\n","      <td>53.25</td>\n","      <td>34.37</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Владимирская область</td>\n","      <td>Владимир</td>\n","      <td>56.14</td>\n","      <td>40.40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Воронежская область</td>\n","      <td>Воронеж</td>\n","      <td>51.67</td>\n","      <td>39.18</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Ивановская область</td>\n","      <td>Иваново</td>\n","      <td>57.00</td>\n","      <td>40.97</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Приморский край</td>\n","      <td>Владивосток</td>\n","      <td>43.11</td>\n","      <td>131.87</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>Хабаровский край</td>\n","      <td>Хабаровск</td>\n","      <td>48.48</td>\n","      <td>135.08</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>Амурская область</td>\n","      <td>Благовещенск</td>\n","      <td>50.28</td>\n","      <td>127.54</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Магаданская область</td>\n","      <td>Магадан</td>\n","      <td>59.56</td>\n","      <td>150.80</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>Сахалинская область</td>\n","      <td>Южно-Сахалинск</td>\n","      <td>46.95</td>\n","      <td>142.74</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>76 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-942a9d56-d092-4fd9-bafa-c1028c8716e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-942a9d56-d092-4fd9-bafa-c1028c8716e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-942a9d56-d092-4fd9-bafa-c1028c8716e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-313d52f3-1a7d-4004-a6bc-f373558123b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-313d52f3-1a7d-4004-a6bc-f373558123b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-313d52f3-1a7d-4004-a6bc-f373558123b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_with_coordinates","summary":"{\n  \"name\": \"data_with_coordinates\",\n  \"rows\": 76,\n  \"fields\": [\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\",\n          \"\\u041a\\u0430\\u0431\\u0430\\u0440\\u0434\\u0438\\u043d\\u043e-\\u0411\\u0430\\u043b\\u043a\\u0430\\u0440\\u0441\\u043a\\u0430\\u044f \\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430\",\n          \"\\u041e\\u0440\\u043b\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432\\u043e\",\n          \"\\u041d\\u043e\\u0432\\u043e\\u0441\\u0438\\u0431\\u0438\\u0440\\u0441\\u043a\",\n          \"\\u041e\\u0440\\u0451\\u043b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.1598388115718805,\n        \"min\": 42.98,\n        \"max\": 68.98,\n        \"num_unique_values\": 72,\n        \"samples\": [\n          57.0,\n          56.5,\n          61.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.64683765669282,\n        \"min\": 20.51,\n        \"max\": 158.65,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          40.97,\n          73.37,\n          40.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Массив данных без Санкт-Петербурга и Москвы\n","data_with_coordinates_robust = data_with_coordinates[(data_with_coordinates['Region'] != 'г. Москва') & (data_with_coordinates['Region'] != 'г. Санкт-Петербург')].reset_index(drop = True)\n","data_with_coordinates_robust"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"s8CPVWNWBGr7","executionInfo":{"status":"ok","timestamp":1710504928050,"user_tz":-180,"elapsed":308,"user":{"displayName":"Андрей Раецкий","userId":"17087416497130291838"}},"outputId":"9afab63e-218f-4983-d5e7-74e0c675d5e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Region            City  Latitude  Longitude\n","0   Белгородская область        Белгород     50.61      36.58\n","1       Брянская область          Брянск     53.25      34.37\n","2   Владимирская область        Владимир     56.14      40.40\n","3    Воронежская область         Воронеж     51.67      39.18\n","4     Ивановская область         Иваново     57.00      40.97\n","..                   ...             ...       ...        ...\n","69       Приморский край     Владивосток     43.11     131.87\n","70      Хабаровский край       Хабаровск     48.48     135.08\n","71      Амурская область    Благовещенск     50.28     127.54\n","72   Магаданская область         Магадан     59.56     150.80\n","73   Сахалинская область  Южно-Сахалинск     46.95     142.74\n","\n","[74 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-de569d8e-80d7-495c-abb6-8ed2d04cfde3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Region</th>\n","      <th>City</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Белгородская область</td>\n","      <td>Белгород</td>\n","      <td>50.61</td>\n","      <td>36.58</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Брянская область</td>\n","      <td>Брянск</td>\n","      <td>53.25</td>\n","      <td>34.37</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Владимирская область</td>\n","      <td>Владимир</td>\n","      <td>56.14</td>\n","      <td>40.40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Воронежская область</td>\n","      <td>Воронеж</td>\n","      <td>51.67</td>\n","      <td>39.18</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Ивановская область</td>\n","      <td>Иваново</td>\n","      <td>57.00</td>\n","      <td>40.97</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>Приморский край</td>\n","      <td>Владивосток</td>\n","      <td>43.11</td>\n","      <td>131.87</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>Хабаровский край</td>\n","      <td>Хабаровск</td>\n","      <td>48.48</td>\n","      <td>135.08</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Амурская область</td>\n","      <td>Благовещенск</td>\n","      <td>50.28</td>\n","      <td>127.54</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>Магаданская область</td>\n","      <td>Магадан</td>\n","      <td>59.56</td>\n","      <td>150.80</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>Сахалинская область</td>\n","      <td>Южно-Сахалинск</td>\n","      <td>46.95</td>\n","      <td>142.74</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>74 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de569d8e-80d7-495c-abb6-8ed2d04cfde3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de569d8e-80d7-495c-abb6-8ed2d04cfde3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de569d8e-80d7-495c-abb6-8ed2d04cfde3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f2cf40fb-c9bd-4bdf-b800-c05930260d26\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2cf40fb-c9bd-4bdf-b800-c05930260d26')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f2cf40fb-c9bd-4bdf-b800-c05930260d26 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_with_coordinates_robust","summary":"{\n  \"name\": \"data_with_coordinates_robust\",\n  \"rows\": 74,\n  \"fields\": [\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 74,\n        \"samples\": [\n          \"\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432\\u0441\\u043a\\u0430\\u044f \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\",\n          \"\\u041e\\u043c\\u0441\\u043a\\u0430\\u044f \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\",\n          \"\\u0420\\u0435\\u0441\\u043f\\u0443\\u0431\\u043b\\u0438\\u043a\\u0430 \\u041a\\u043e\\u043c\\u0438\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 74,\n        \"samples\": [\n          \"\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432\\u043e\",\n          \"\\u041e\\u043c\\u0441\\u043a\",\n          \"\\u0421\\u044b\\u043a\\u0442\\u044b\\u0432\\u043a\\u0430\\u0440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.174166880409927,\n        \"min\": 42.98,\n        \"max\": 68.98,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          59.58,\n          50.61,\n          55.45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.807447014079536,\n        \"min\": 20.51,\n        \"max\": 158.65,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          40.97,\n          84.97,\n          40.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["3. **Пространственные веса**"],"metadata":{"id":"B7uCy3VvyVc5"}},{"cell_type":"markdown","source":["$d_{ij} = 2\\cdot R \\cdot arcsin \\big( \\sqrt{sin^2(\\frac{\\varphi_i - \\varphi_j}{2}) + cos(\\varphi_j) \\cdot cos(\\varphi_i) \\cdot sin^2(\\frac{\\lambda_j - \\lambda_i}{2})}\\big )$"],"metadata":{"id":"7LG6X1eAh_kK"}},{"cell_type":"code","source":["# Вычисление расстояний и добавление их в матрицу\n","sp_weight_matrix = []\n","R = 6371 # km\n","\n","for i in range(0, len(data_with_coordinates)):\n","  list_of_dist = []\n","  for j in range(0, len(data_with_coordinates)):\n","\n","    phi_i = data_with_coordinates['Latitude'][i]\n","    phi_j = data_with_coordinates['Latitude'][j]\n","    lambda_i = data_with_coordinates['Longitude'][i]\n","    lambda_j = data_with_coordinates['Longitude'][j]\n","\n","    if i == j:\n","      d = 0\n","    else:\n","      d = 2 * R * asin(sqrt((sin((phi_i - phi_j)/2))**2 + cos(phi_j) * cos(phi_i) * (sin((lambda_j - lambda_i)/2))**2))\n","    if d == 0:\n","      w = 0\n","    else:\n","      w = 1/d\n","    list_of_dist.append(w)\n","\n","  sp_weight_matrix.append(list_of_dist)\n","\n","sp_weight_matrix = np.array(sp_weight_matrix)"],"metadata":{"id":"uDeW1_KzhoNr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Нормализация по строкам\n","sp_weight_matrix_norm = normalize(sp_weight_matrix, axis= 1 , norm='l1')\n","sp_weight_matrix_norm\n","sp_weight_matrix_norm.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vkMP4oDetlv6","executionInfo":{"status":"ok","timestamp":1710505082839,"user_tz":-180,"elapsed":461,"user":{"displayName":"Андрей Раецкий","userId":"17087416497130291838"}},"outputId":"b65990bc-355d-4157-d271-343740c30c14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(76, 76)"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Экспорт в R\n","Weights_from_python = pd.DataFrame(data=sp_weight_matrix_norm)\n","Weights_from_python.to_excel(r'/content/Weights_from_python.xlsx')"],"metadata":{"id":"rDrvCif4FetJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Вычисление расстояний и добавление их в матрицу\n","sp_weight_matrix_robust = []\n","R = 6371 # km\n","\n","for i in range(0, len(data_with_coordinates_robust)):\n","  list_of_dist = []\n","  for j in range(0, len(data_with_coordinates_robust)):\n","\n","    phi_i = data_with_coordinates_robust['Latitude'][i]\n","    phi_j = data_with_coordinates_robust['Latitude'][j]\n","    lambda_i = data_with_coordinates_robust['Longitude'][i]\n","    lambda_j = data_with_coordinates_robust['Longitude'][j]\n","\n","    if i == j:\n","      d = 0\n","    else:\n","      d = 2 * R * asin(sqrt((sin((phi_i - phi_j)/2))**2 + cos(phi_j) * cos(phi_i) * (sin((lambda_j - lambda_i)/2))**2))\n","    if d == 0:\n","      w = 0\n","    else:\n","      w = 1/d\n","    list_of_dist.append(w)\n","\n","  sp_weight_matrix_robust.append(list_of_dist)\n","\n","sp_weight_matrix_robust = np.array(sp_weight_matrix_robust)"],"metadata":{"id":"Dzkcuy37ChLM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Нормализация по строкам\n","sp_weight_matrix_robust_norm = normalize(sp_weight_matrix_robust, axis= 1 , norm='l1')\n","sp_weight_matrix_robust_norm\n","sp_weight_matrix_robust_norm.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IU9rXdIfCsj-","executionInfo":{"status":"ok","timestamp":1710505095628,"user_tz":-180,"elapsed":15,"user":{"displayName":"Андрей Раецкий","userId":"17087416497130291838"}},"outputId":"0c8edfc7-3084-40a8-e1c1-12ccc78dc566"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(74, 74)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# Экспорт в R\n","Weights_robust_from_python = pd.DataFrame(data=sp_weight_matrix_norm)\n","Weights_robust_from_python.to_excel(r'/content/Weights_robust_from_python.xlsx')"],"metadata":{"id":"F8KOG5SzBFAo"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1fG9ePR8vnC2hc22a1eyUZ4Fxkzg4BOgC","timestamp":1715955512799},{"file_id":"1kzKeR0GF6CQKouvX7JXk7JHH2Ze2Lvkq","timestamp":1707420505115},{"file_id":"1OIPVY5LMjaMnshjs2_0OE0fRJYPXx8Pq","timestamp":1707420438972}],"authorship_tag":"ABX9TyNcKOdgjPNSZq/Qpflse9MC"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}