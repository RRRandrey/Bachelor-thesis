#================================================================================
################################  ОБРАБОТКА ДАННЫХ  #############################
#================================================================================


### НЕОБХОДИМЫЕ ПАКЕТЫ ==========================================================

library(readxl)
library(openxlsx)
library(data.table)
library(dplyr)
library(tidyr)
library(stringr)
library(psych)
library(Hmisc)
library(tidyverse)


### МАССИВЫ ДАННЫХ ==============================================================

path <- 'C:/Users/Ryan_Gosling/Downloads/'

setwd(path)

grp_data <- read_excel('Раздел 8 - Валовой региональный продукт.xlsx', 
                       sheet = '8.1.', 
                       skip = 7, 
                       n_max = 97, 
                       na = '-')

# Инвестиции в НИОКР
rd_data <- read_excel('Раздел 18 - Наука и инновации.xlsx', 
                      sheet = '18.5.', 
                      skip = 7, 
                      n_max = 96, 
                      na = '-')

# Инвестиции в основной капитал
inv_data <- read_excel('Раздел 10 - Инвестиции.xlsx', 
                       sheet = '10.1.', 
                       skip = 7, 
                       n_max = 97, 
                       na = '-')

# Рабочая сила
lab_data <- read_excel('Раздел 2 - Труд.xlsx', 
                       sheet = '2.1.', 
                       skip = 8, 
                       n_max = 96, 
                       na = '-')

# Количество выпускников высших учебных заведений
edu_data <- read_excel('Раздел 4 - Образование.xlsx', 
                       sheet = '4.21.', 
                       skip = 7, 
                       n_max = 97, 
                       na = '-')

# Экспорт со странами ближнего и дальнего зарубежья
expf_data <- read_excel('Раздел 21 - Внешняя торговля.xlsx', 
                        sheet = '21.1.1.', 
                        skip = 8, 
                        n_max = 97, 
                        na = '-')

expn_data <- read_excel('Раздел 21 - Внешняя торговля.xlsx', 
                        sheet = '21.2.1.', 
                        skip = 8, 
                        n_max = 97, 
                        na = '-')

# Импорт со странами ближнего и дальнего зарубежья
impf_data <- read_excel('Раздел 21 - Внешняя торговля.xlsx', 
                        sheet = '21.1.2.', 
                        skip = 8, 
                        n_max = 97, 
                        na = '-')

impn_data <- read_excel('Раздел 21 - Внешняя торговля.xlsx', 
                        sheet = '21.2.2.', 
                        skip = 8, 
                        n_max = 97, 
                        na = '-')

# Прямые иностранные инвестиции
fdi_data <- read_excel('Раздел 10 - Инвестиции.xlsx', 
                       sheet = '10.4.3.', 
                       skip = 9, 
                       n_max = 97, 
                       na = '-')

# ИПЦ
cpi_data <- read_excel('Раздел 20 - Цены и тарифы.xlsx', 
                       sheet = '20.1.', 
                       skip = 8, 
                       n_max = 96, 
                       na = '-')

# Индекс заработных плат
w_data <- read_excel('Раздел 3 - Уровень жизни населения.xlsx', 
                     sheet = '3.1.2.', 
                     skip = 8, 
                     n_max = 97, 
                     na = '-')

# Обменный курс
ex_data <- read_excel('Proshlye_dannye_-_USD_RUB.xlsx')


## Без 2022 года ----------------------------------------------------------------

cpi_data <- cpi_data[,-24]
w_data <- w_data[,-24]
inv_data <- inv_data[,-24]
lab_data <- lab_data[,-24]
rd_data <- rd_data[,-24]
edu_data <- edu_data[,-24]


### УДАЛИТЬ ОПРЕДЕЛЕННЫЕ РЕГИОНЫ ================================================

## Задать условие ---------------------------------------------------------------

pattern = 'окр|Ханты|Нене|автономных|автономного|Сева|Чеч|Крым|числе:|Евре|Ингу'

# Создать функцию, которая будет применена ко всем массивам

clean <- function(data){
 
 # Правильные названия столбцов
 names(data) <- c('region', 
 '2000', '2001', '2002', '2003', 
 '2004', '2005', '2006', '2007', 
 '2008', '2009', '2010', '2011', 
 '2012', '2013', '2014', '2015', 
 '2016', '2017', '2018', '2019', 
 '2020', '2021')
 
 # Применение заданного ранее условия
 data <- data[-grep(pattern, data$region),]
 
 return(data)
 
}

# Применить созданную функцию ---------------------------------------------------

grp_data <- clean(grp_data)
cpi_data <- clean(cpi_data)
rd_data <- clean(rd_data)
w_data <- clean(w_data)
inv_data <- clean(inv_data)
lab_data <- clean(lab_data)
edu_data <- clean(edu_data)
expf_data <- clean(expf_data)
expn_data <- clean(expn_data)
impf_data <- clean(impf_data)
impn_data <- clean(impn_data)

# Отдельно обработать FDI (меньше периодов с данными) ---------------------------

names(fdi_data) <- c('region', 
                     '2011', '2012', '2013', 
                     '2014', '2015', '2016', 
                     '2017', '2018', '2019', 
                     '2020', '2021')

len_fdi <- length(fdi_data$region)

fdi_data <- data.frame(fdi_data$region, 
                       rep('', len_fdi), rep('', len_fdi),
                       rep('', len_fdi), rep('', len_fdi),
                       rep('', len_fdi), rep('', len_fdi), 
                       rep('', len_fdi), rep('', len_fdi),
                       rep('', len_fdi), rep('', len_fdi), 
                       rep('', len_fdi), fdi_data$'2011', 
                       fdi_data$'2012', fdi_data$'2013', 
                       fdi_data$'2014', fdi_data$'2015', 
                       fdi_data$'2016', fdi_data$'2017', 
                       fdi_data$'2018', fdi_data$'2019', 
                       fdi_data$'2020', fdi_data$'2021')

names(fdi_data) <- c('region', 
                     '2000', '2001', '2002', '2003', 
                     '2004', '2005', '2006', '2007', 
                     '2008', '2009', '2010', '2011', 
                     '2012', '2013', '2014', '2015', 
                     '2016', '2017', '2018', '2019', 
                     '2020', '2021')

fdi_data <- fdi_data[-grep(pattern, fdi_data$region),]


## Пересчет ИПЦ и индекса заработных плат ---------------------------------------

cpi_data$'2000' <- 100 
cpi_col <- names(cpi_data)

for (i in 2:length(cpi_col)){
  a <- cpi_data[cpi_col[i]]
  cpi_data[cpi_col[i]] <- as.numeric(unlist(a))/100
}

# Посчитать накопленный рост цен с 2000 года
for (i in 4:length(cpi_col)){
  cpi_data[cpi_col[i]] <- cpi_data[cpi_col[i]]*cpi_data[cpi_col[(i-1)]]
}

# Сперва посчитать из заработных плат их темп роста (цепным способом)

nam_w <- names(w_data)

for (i in 2:length(nam_w)){
  w_data[nam_w[i]] <- as.numeric(unlist(w_data[nam_w[i]]))
}

w_data2 <- copy(w_data)
nam_w2 <- names(w_data2)

for (i in 3:length(nam_w)){
  w_data2[names(w_data2)[i]] <- w_data[nam_w[i]]/w_data[nam_w[(i-1)]]
}

# Сделать 2000 год - базовым => 1
w_data2$'2000' <- 1

# Посчитать накопленный рост заработных плат с 2000 года
for (i in 4:length(nam_w2)){
  w_data2[nam_w2[i]] <- w_data2[nam_w2[i]]*w_data2[nam_w2[(i-1)]]
}


## Пересчет валютного курса из месячных данных в годовые ------------------------

ex_data <- read_excel('Proshlye_dannye_-_USD_RUB.xlsx')

ex_data <- data.frame(ex_data$'Дата', ex_data$'Цена')
names(ex_data) <- c('date', 'exr')

# Разделить дату на год, месяц и день
ex_data[c('year','month', 'day')] <- str_split_fixed(ex_data$date, '-', 3)

# Объединить в массив данных
ex_data <- data.frame(ex_data$year, ex_data$month, ex_data$exr)
names(ex_data) <- c('year', 'month', 'exr')

# Убрать нули из месяца
ex_data$month <- str_replace_all(ex_data$month, '^0','')

# Взять медиану по годам
ex_data <- aggregate(exr ~ year, ex_data, median)[c(1:22),]

# Сформировать массив с нужными данными
ex_data <- data.frame(rep(ex_data$year, length(grp_data$region)), 
                      (rep(ex_data$exr, length(grp_data$region))))

names(ex_data) <- c('year', 'exr')


## Длинный формат массивов ------------------------------------------------------

grp_data <- gather(grp_data, year, nom_grp, '2000':'2021', factor_key = T)
cpi_data <- gather(cpi_data, year, cpi, '2000':'2021', factor_key = T)
edu_data <- gather(edu_data, year, edu, '2000':'2021', factor_key = T)
rd_data <- gather(rd_data, year, rd_invs, '2000':'2021', factor_key = T)
inv_data <- gather(inv_data, year, invs, '2000':'2021', factor_key = T)
w_data2 <- gather(w_data2, year, w_ind, '2000':'2021', factor_key = T)
lab_data <- gather(lab_data, year, labor, '2000':'2021', factor_key = T)
expf_data <- gather(expf_data, year, expf, '2000':'2021', factor_key = T)
expn_data <- gather(expn_data, year, expn, '2000':'2021', factor_key = T)
impf_data <- gather(impf_data, year, impf, '2000':'2021', factor_key = T)
impn_data <- gather(impn_data, year, impn, '2000':'2021', factor_key = T)
fdi_data <- gather(fdi_data, year, fdi, '2000':'2021', factor_key = T)

# Заменить значение в ячейке, в которой есть пробел (3 904.0 => 3904.0)

rd_data[1553,3]
rd_data[1553,3] <- '3904.0'


## Правильный (числовой) тип данных ---------------------------------------------

grp_data$nom_grp <- as.numeric(grp_data$nom_grp)
cpi_data$cpi <- as.numeric(cpi_data$cpi)
edu_data$edu <- as.numeric(edu_data$edu)
rd_data$rd_invs <- as.numeric(rd_data$rd_invs)
inv_data$invs <- as.numeric(inv_data$invs)
w_data2$w_ind <- as.numeric(w_data2$w_ind)
lab_data$labor <- as.numeric(lab_data$labor)
expf_data$expf <- as.numeric(expf_data$expf)
expn_data$expn <- as.numeric(expn_data$expn)
impf_data$impf <- as.numeric(impf_data$impf)
impn_data$impn <- as.numeric(impn_data$impn)
fdi_data$fdi <- as.numeric(fdi_data$fdi)

## Заполнение пропусков ---------------------------------------------------------

expn_data <- expn_data[ order(expn_data$region), ]

for (i in 1:nrow(expn_data)){ 
  if(is.na(expn_data$expn[i])){ 
  if(is.na(expn_data$expn[i+1])){ 
 
  h <- (expn_data$expn[i+2] - expn_data$expn[i-1])/3
 
  expn_data$expn[i] <- expn_data$expn[i-1] + h
  expn_data$expn[i+1] <- expn_data$expn[i] + h
 
  }else{ 
 
  expn_data$expn[i] <- (expn_data$expn[i-1] + expn_data$expn[i+1])/2} 
  }
}

expf_data <- expf_data[ order(expf_data$region), ]

for (i in 1:nrow(expf_data)){ 
  if(is.na(expf_data$expf[i])){ 
  if(is.na(expf_data$expf[i+1])){ 
 
  h <- (expf_data$expf[i+2] - expf_data$expf[i-1])/3
 
  expf_data$expf[i] <- expf_data$expf[i-1] + h
  expf_data$expf[i+1] <- expf_data$expf[i] + h
 
  }else{ 
 
  expf_data$expf[i] <- (expf_data$expf[i-1] + expf_data$expf[i+1])/2} 
  }
}

impn_data <- impn_data[ order(impn_data$region), ]

for (i in 1:nrow(impn_data)){
  if(is.na(impn_data$impn[i])){
  if(is.na(impn_data$impn[i+1])){
 
  h <- (impn_data$impn[i+2] - impn_data$impn[i-1])/3
 
  impn_data$impn[i] <- impn_data$impn[i-1] + h
  impn_data$impn[i+1] <- impn_data$impn[i] + h
 
  }else{
 
  impn_data$impn[i] <- (impn_data$impn[i-1] + impn_data$impn[i+1])/2}
  }
}

impf_data <- impf_data[ order(impf_data$region), ]

for (i in 1:nrow(impf_data)){
  if(is.na(impf_data$impf[i])){
  if(is.na(impf_data$impf[i+1])){
 
  h <- (impf_data$impf[i+2] - impf_data$impf[i-1])/3
 
  impf_data$impf[i] <- impf_data$impf[i-1] + h
  impf_data$impf[i+1] <- impf_data$impf[i] + h
 
  }else{
 
  impf_data$impf[i] <- (impf_data$impf[i-1] + impf_data$impf[i+1])/2}
  }
}

right_order <- data.frame(grp_data$region, grp_data$year)
names(right_order) <- c('region', 'year')

expn_data <- right_order %>% inner_join(expn_data, by = c('region', 'year'))
expf_data <- right_order %>% inner_join(expf_data, by = c('region', 'year'))
impn_data <- right_order %>% inner_join(impn_data, by = c('region', 'year'))
impf_data <- right_order %>% inner_join(impf_data, by = c('region', 'year'))


### СОЗДАНИЕ ПЕРЕМЕННЫХ ========================================================

## Регион
region <- grp_data$region

## Год (в формате числа)
# 1999 прибавлено, т.к. при преобразовании 2001 заменяется на 1, 2002 на 2 ...
year <- as.numeric(grp_data$year) + 1999 

## Реальный ВРП (млн.руб.)
grp_data$real_grp <- grp_data$nom_grp/cpi_data$cpi
grp <- grp_data$real_grp
grp <- grp/1000

## Рабочая сила (тыс. человек)
labor <- lab_data$labor 

## Человеческий капитал (%)
humcap <- (edu_data$edu)/labor*100


## Экспорт ---------------------------------------------------------------------

# Корректировка на рост цен
expn_data$real_expn_rub <- (expn_data$expn * ex_data$exr)/cpi_data$cpi
expf_data$real_expf_rub <- (expf_data$expf * ex_data$exr)/cpi_data$cpi

# Реальный экспорт (млрд. рублей)
export <- expn_data$real_expn_rub + expf_data$real_expf_rub
export <- export/1000


## Импорт ----------------------------------------------------------------------

# Корректировка на рост цен
impn_data$real_impn_rub <- (impn_data$impn * ex_data$exr)/cpi_data$cpi
impf_data$real_impf_rub <- (impf_data$impf * ex_data$exr)/cpi_data$cpi

# Реальный импорт (млрд. рублей)
import <- impn_data$real_impn_rub + impf_data$real_impf_rub
import <- import/1000 


## Прямые иностранные инвестиции -----------------------------------------------

# Корректировка на рост цен
fdi_data$real_fdi_rub <- (fdi_data$fdi * ex_data$exr)/cpi_data$cpi

# Реальные ПИИ в млн. рублей
fdi <- fdi_data$real_fdi_rub 
fdi <- fdi/1000


## Капитал НИОКР (млрд. рублей) ------------------------------------------------

prd <- 0.5*cpi_data$cpi + 0.5*w_data2$w_ind

rd_invs <- rd_data$rd_invs
rd_data$rd_inv_adj <- rd_invs/prd
delta1 <- 0.15

num_reg <- nrow(w_data)
num_obs <- nrow(cpi_data)

rd_data$grow_rd <- 0
for (i in (num_reg+1):num_obs){
  rd_data$grow_rd[i] <- (rd_data$rd_inv_adj[i] - 
              rd_data$rd_inv_adj[i-num_reg])/rd_data$rd_inv_adj[i-num_reg]
}

g1 <- mean(rd_data$grow_rd[(num_reg+1):num_obs])

rd_inv0 <- (as.numeric(subset(rd_data, year == '2000')$rd_inv_adj) + 
                      as.numeric(subset(rd_data, year == '2001')$rd_inv_adj) + 
                      as.numeric(subset(rd_data, year == '2002')$rd_inv_adj) + 
                      as.numeric(subset(rd_data, year == '2003')$rd_inv_adj) + 
                      as.numeric(subset(rd_data, year == '2004')$rd_inv_adj))/5

rd <- rd_inv0/(delta1 + g1)

for (t in 1:21) {
  I <- rd_data$rd_inv_adj[c((num_reg*t + 1):(num_reg*(t+1)))]
  rd <- c(rd, (1 - delta1)*rd[num_reg*(t-1) + 1] + I)
}

rd <- rd/1000
rd_data$rd_capital <- rd


## Основной капитал (млрд. рублей) ---------------------------------------------

inv_data$invs_adj <- inv_data$invs/prd 
delta2 <- 0.05

inv_data$grow_invest <- 0
for (i in (num_reg+1):num_obs){
  inv_data$grow_invest[i] <- (inv_data$invs_adj[i] - 
                    inv_data$invs_adj[i-num_reg])/inv_data$invs_adj[i-num_reg]
}

g2 <- mean(inv_data$grow_invest[(num_reg+1):num_obs])

invest0 <- (as.numeric(subset(inv_data, year == '2000')$invs_adj) + 
 as.numeric(subset(inv_data, year == '2001')$invs_adj) + 
 as.numeric(subset(inv_data, year == '2002')$invs_adj) + 
 as.numeric(subset(inv_data, year == '2003')$invs_adj) + 
 (subset(inv_data, year == '2004')$invs_adj))/5 

capital <- invest0/(delta2 + g2)

for (t in 1:21) {
  I <- inv_data$invs_adj[c((num_reg*t + 1):(num_reg*(t+1)))]
  capital <- c(capital, (1 - delta2)*capital[num_reg*(t-1) + 1] + I)
}

capital <- capital/1000
inv_data$fixed_capital <- capital


## Создание лагов переменных ---------------------------------------------------

grp_l <- c(rep(0, num_reg), grp[c(1:(length(grp)-num_reg))])
rd_l <- c(rep(0, num_reg), rd[c(1:(length(rd)-num_reg))])
capital_l <- c(rep(0, num_reg), capital[c(1:(length(capital)-num_reg))])
labor_l <- c(rep(0, num_reg), labor[c(1:(length(labor)-num_reg))])
humcap_l <- c(rep(0, num_reg), humcap[c(1:(length(humcap)-num_reg))])
fdi_l <- c(rep(0, num_reg), fdi[c(1:(length(fdi)-num_reg))])
export_l <- c(rep(0, num_reg), export[c(1:(length(export)-num_reg))])
import_l <- c(rep(0, num_reg), import[c(1:(length(import)-num_reg))])


### ЧЕТЫРЕ МАССИВА, НА КОТОРЫХ БУДУТ ПОСТРОЕНЫ МОДЕЛИ ==========================

## Без FDI (2001-2021) ---------------------------------------------------------

df_no_fdi_76 <- data.frame(region, year, grp, rd, capital, labor, humcap, 
 export, import, rd_l, capital_l, 
 labor_l, humcap_l, export_l, import_l)

df_no_fdi_76<- df_no_fdi_76[-grep('2000', df_no_fdi_76$year),]

names(df_no_fdi_76) <- c('region', 'year', 'grp', 'rd', 'capital', 'labor', 
 'humcap', 'export', 'import', 'rd_l', 
 'capital_l', 'labor_l', 'humcap_l', 'export_l', 'import_l')

rownames(df_no_fdi_76) <- NULL


## С FDI (2012-2021) -----------------------------------------------------------

df_with_fdi_76 <- data.frame(region, year, grp, rd, capital, labor, humcap, 
 export, import, fdi, rd_l, capital_l, 
 labor_l, humcap_l, export_l, import_l, fdi_l)

df_with_fdi_76 <- df_with_fdi_76[-grep('200|2010|2011', df_with_fdi_76$year),]

names(df_with_fdi_76) <- c('region', 'year', 'grp', 'rd', 'capital', 
 'labor', 'humcap', 'export', 'import', 'fdi',
 'rd_l', 'capital_l', 'labor_l', 
 'humcap_l', 'export_l', 'import_l', 'fdi_l')

rownames(df_with_fdi_76) <- NULL


## Без FDI и без Питера с Мск (2001-2021) --------------------------------------

df_no_fdi_74 <- df_no_fdi_76[-grep('г. Сан|г. Мос', df_no_fdi_76$region),]
rownames(df_no_fdi_74) <- NULL


## С FDI, но без Питера и Мск (2012-2021) —------------------------------------

df_with_fdi_74 <- df_with_fdi_76[-grep('г. Сан|г. Мос', df_with_fdi_76$region),]
rownames(df_with_fdi_74) <- NULL


## Сохранить массивы —---------------------------------------------------------

write.xlsx(df_with_fdi_76, 'df_with_fdi_76.xlsx')
write.xlsx(df_no_fdi_76, 'df_no_fdi_76.xlsx')
write.xlsx(df_with_fdi_74, 'df_with_fdi_74.xlsx')
write.xlsx(df_no_fdi_74, 'df_no_fdi_74.xlsx')

rm(list = ls())
